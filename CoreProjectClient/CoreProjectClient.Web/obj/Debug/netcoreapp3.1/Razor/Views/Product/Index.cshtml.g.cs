#pragma checksum "C:\Users\serdar.kaya\source\repos\CoreProjectClient\CoreProjectClient.Web\Views\Product\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "faf316791e32d34c67d2fab8879519e882d6738c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Product_Index), @"mvc.1.0.view", @"/Views/Product/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\serdar.kaya\source\repos\CoreProjectClient\CoreProjectClient.Web\Views\_ViewImports.cshtml"
using CoreProjectClient.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\serdar.kaya\source\repos\CoreProjectClient\CoreProjectClient.Web\Views\_ViewImports.cshtml"
using CoreProjectClient.Data.Models.AccountViewModels;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\serdar.kaya\source\repos\CoreProjectClient\CoreProjectClient.Web\Views\_ViewImports.cshtml"
using CoreProjectClient.Data.Models.ViewModel;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"faf316791e32d34c67d2fab8879519e882d6738c", @"/Views/Product/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"2673c050fd3eda428f43bb12948f12acf99f59bc", @"/Views/_ViewImports.cshtml")]
    public class Views_Product_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Users\serdar.kaya\source\repos\CoreProjectClient\CoreProjectClient.Web\Views\Product\Index.cshtml"
  
    ViewData["Title"] = "Index";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<h1>Products</h1>\r\n<a href=\"/Default/KursEkle\" class=\"btn btn-info\">Yeni Kurs Ekle</a>\r\n\r\n<div");
            BeginWriteAttribute("id", " id=\"", 139, "\"", 144, 0);
            EndWriteAttribute();
            WriteLiteral(@" class=""col-md-12 form-item table-container"">
    <table id=""productTable"" class=""dataTable table table-bordered table-hover"" cellspacing=""0"" width=""100%""></table>
</div>





<script>
    $(document).ready(function () {
        
        $.ajax({
            url: 'https://localhost:5001/Product/GetAll',
            type: 'GET',
            contentType: 'application/json',
            async: true,
            beforeSend: function () {
                $.LoadingOverlay(""show"");
            },
            success: function (data) {
                if (data.isSuccessful) {
                    productDataTables(data.list)
                }
            },
            error: function (data) {
                alert(""Veri Yüklenirken Hata Oluştu!"");
                alertify.error(""Veri Yüklenirken Hata Oluştu!"");
            },
            complete: function () {
                $.LoadingOverlay(""hide"");
            }
        });


    });

    
    function productDataTables(data) ");
            WriteLiteral(@"{
        var table = $('#productTable').DataTable({
            data: data,
            columns: [
                // 0- Control Buttonsw
                {
                    title: '<span class=""title"">İşlem</span><span class=""subtitle""></span>',
                    data: 'id',
                    class: 'column-xs column-center control-buttons',
                    orderable: false,
                    searchable: false
                },
                // 1- ProductSKU
                {
                    title: '<span class=""title"">Ürün</span><span class=""subtitle""> Kodu</span>',
                    data: 'sk',
                    class: 'column-md column-ProductSKU',
                    orderable: true,
                    searchable: true
                },
                // 2- ProductName
                {
                    title: '<span class=""title"">Ürün</span><span class=""subtitle""> Adı</span>',
                    data: 'name',
                    class: ' column-Prod");
            WriteLiteral(@"uctTitle',
                    orderable: true,
                    searchable: true
                },
                // 3- Fiyatı

                {
                    title: '<span class=""title"">Ürün</span><span class=""subtitle""> Fiyatı</span>',
                    data: 'purchasePrice',
                    class: ' column-xs',
                    orderable: true,
                    searchable: true
                },               
                // 4 Description
                {
                    title: '<span class=""title""> Açıklama </span><span class=""subtitle""> </span>',
                    data: 'description',
                    class: ' column-sm',
                    orderable: true,
                    searchable: true
                },
                // 5- Tarihi

                {
                    title: '<span class=""title"">Kayıt Tarihi</span><span class=""subtitle""> </span>',
                    data: 'createdDate',
                    class: ' column-xs',");
            WriteLiteral(@"
                    orderable: true,
                    searchable: true
                },
            ],
            columnDefs: [

                // 0- Control Buttons
                {
                    targets: 0,
                    render: function (data, type, row, meta) {
                        var template = '<a href=""' + 'localhost/' + 'product/detail/' + data + '"" title="""" target=""_self"" id="""" class=""btn btn-xs btn-primary btn-ghost btn-round"" type=""button""><i class=""fa fa-pencil-alt btn-icon""></i></a>';
                        template += '<a href=""PleaseEnableJavascript.html"" onclick=""DeleteProduct(this);return false;"" title="""" target=""_self"" data-id=""' + data + '"" class=""btn btn-xs btn-danger btn-ghost btn-round btn-delete-teams"" type=""button""><i class=""fa fa-trash-alt btn-icon""></i></a>';
                        return template;
                    }
                },
                // 3- fiyat
                {
                    targets: 3,
                    ren");
            WriteLiteral(@"der: function (data, type, row, meta) {
                        var val = '<span class=""value"">' +
                            FormatPrice(data) +
                            '</span><span class=""unit"">TL</span>';
                        return val;
                    }
                },
                // 5- date
                {
                    targets: 5,
                    render: function (data, type, row, meta) {
                        var template =
                            moment(data).utc().format('DD.MM.YYYY HH:mm');
                        return template;
                    }
                },
                { type: 'de_datetime', targets: 5 }
                
            ],
            order: [
                [1, 'asc']
            ],
            buttons: [
                {
                    extend: 'colvis',
                    titleAttr: 'Alanları göster/gizle',
                    text: '<i class=""fa fa-eye btn-icon""></i>'
                },
     ");
            WriteLiteral(@"           {
                    extend: 'excelHtml5',
                    titleAttr: 'Excel İndir',
                    text: '<i class=""fa fa-file-excel-o btn-icon""></i>'
                },
            ],
            select: {
                style: 'multi',
                selector: 'td.column-select',
            },
            fixedHeader: true,
            drawCallback: function () {
                $('.img-lazy').lazyload();
            },
            initComplete: function () {

                function DeleteProduct(e) {
                    var id = e.getAttribute(""data-id"");
                    Swal.fire({
                        title: 'Emin misiniz ?',
                        text: ""Ürün silinecektir!"",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Evet',
                        can");
            WriteLiteral(@"celButtonText: 'Vazgeç',
                        preConfirm: function () {
                            return new Promise(function (resolve) {
                                $.ajax({
                                    url: 'https://localhost:5001/Product/DeleteProduct/' + id,
                                    type: 'Delete'
                                })
                                    .done(function (response) {
                                        if (response == ""Ok"") {
                                            Swal.fire('Başarılı', ""Seçilen Ürün Silindi. Yönlendiriliyorsunuz"", ""success"");
                                            Yenile(1);
                                        }
                                        else {
                                            Swal.fire(""Hata"", ""Ürün silinemedi"", ""error"");
                                        }
                                    })
                                    .fail(function (response) {
          ");
            WriteLiteral(@"                              Swal.fire(""Hata"", ""Ürün silinemedi. Hata :"" + response.statusText, ""error"");
                                    });
                            });
                        },
                        allowOutsideClick: false
                    });
                }
              
            }

        });
    }


  //For TL
    function FormatPrice(data) {
        var val = 0;
        val = new Intl.NumberFormat('tr-TR',
            {
                useGrouping: true,
                minimumFractionDigits: 2,
                maximumFractionDigits: 2,
            }).format(data);
        return val;
    }


    //Bütün sayfalarda işlem sonrası yenileme
    function Yenile(Islem) {
        if (Islem == 0) {
            location.reload();
            return;
        }
        else {
            setInterval(function () {
                location.reload();
            }, 1500);
        }
    }
        //Bütün sayfalarda işlem sonrası yenileme");
            WriteLiteral("\n\r\n</script>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
